Issues 2205
-----------------------------------------
1. First I'll go through the stickynote code
	-Need to move the static css style to StickyNoteNode.css to make the code clean
	
	-The textarea and div static have different word-break
	-Some state confilict when user edited the pinned text
		-then the pin state is transferred to the opposite
		-Need to figure out how the logic is different with drag logic and pinned logic
		-The problem is solved by put handlePinClick with useCallback(),then the state 
		is updated correctly
	
		
	
------------------------------------------------------------------
Test case:

1. Drag:
	-With no comments
	-With normal comments
	-With long comments
	
2. Input comments
	-Without background color
	-With Background color
	-With resize, check if the text would float out of border

3. Color Picker
	-Colored in correct area without resizing
	-Colored in correct area with resizing
	
4. Resize
	-does the node resize correctly?
	
5. Pinned function

	-Before editing, pinned, not dragable;unpinned, dragable
	-After editing,pinned, not dragable;unpinned, dragable
-----------------------------------------------------------------

	-In one scenario, the pinned logic is different from enableDrag
	-which is in edit mode, the edit mode would influence enableDrag
	-but should not change the pinned state 
	-Now I think we should mofify the onStopEdit part


2. I would like to import my extension of VS code to VS code insider where I can ask
copilot

3. Check MiniMap:
https://reactflow.dev/docs/api/plugin-components/minimap/
	-Minimap is not interactive by default, if wanna control
	-need to pass zoomable and pannable
	
In src/VPPanelSettings.js ,we have initial panel settings include minimap and basic control panel
[Attention!] Here we still have minimap, not sure if it still works for our customizedMinimap

	
3.1 After checking the examples in the official website, we notice that
its customization mainly focus on minimap itself, not add more buttons around it

3.2 find out where to modify so that customed
	add CustomizedMinimap in index.ts and VPEditor.tsx

3.3 Why the customized minimap appeared at the bottom right while the buttons define around it is
at the top of the window?

3.4 Minimap seems to be a float svg that is fixed-located at bottom-right
	-How should we make the button around it?

4. Check the <Controls/> component in reactflow
https://reactflow.dev/docs/api/plugin-components/controls/#extended-controls




-------------------------------------------
Main task today:
1. Remove the unneccesary code from feat/sticky node branch
	-While removing, remember to test in different scenario
	
2. rebase to main branch, pull the update from the main to local

3. test if there's confilict

4. pull request

5. Start Mini Map
	-We would like to customize the minimap and add 'hide/show' button to it
	-I remember that the minimap should have default lock button 


----------------------------------------------
My thoughts:

1. I noticed that there's global color setter in Minimap
which set all node with specific color based on its type





--------------------------------------------
Take away:

-How to rebase:
The steps
1. Go to the branch in need of rebasing

2. Enter git fetch origin (This syncs your main branch with the latest changes)

3. Enter git rebase origin/main (or git rebase origin/master if your main branch is named master)

4. Fix merge conflicts that arise however you see fit

5. After fixing merge conflicts, git add FILE previously merge conflicted files

6. Enter git rebase --continue (or git rebase --skip if git complains that there were no changes after resolving all conflicts)

7.Repeat as necessary as merge conflicts arise in the subsequent commits

8. Once the rebase is complete, enter git push origin HEAD --force

This command pushes your rebase fixed branch to remote. The --force is important as it tells remote, 
"I know these changes are correct, accept them as is."
Without the --force flag, your remote branch will continue to believe it is out of sync and will claim a merge conflict.
And that's it. You have now git rebased the main branch onto your feature branch and broken yourself out of rebase hell.


- The minimap is rendered as an SVG. 
This means that you must use SVG elements for your custom node component

