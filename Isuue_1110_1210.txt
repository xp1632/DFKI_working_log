Issues 1110_1210:
-----------------------------------------

1. Check JupyterLab Feature
```
	1. support many format: csv,pdf,json, many image types
	
	2. Modes of whole notebook
	- Command mode to go through whole notebook's cells
	- Edit mode to edit one specific cells
		
	3.In cells
	- press m to markdown text cells
	- press y to code cells
	- the language kernel that runs the code is on top right
	- all code in the notebook would be executed with same kernel
	
```

2. User Guide of JupyterLab

	- JupyterLab URL
		- to scroll to a specific heading
		`/lab/tree/path/to/notebook.ipynb?#my-heading`
		- append a # before heading and use - to replace spaces
		- We can also 'copy sharable link' by right click the file

	- when Passing arguments to open files in various kernels
		- we could use 'Copy path' to copy the filesystem relative path

	
	- Jupyter notebooks (.ipynb files) are fully supported in JupyterLab.


	- **Terminals**
		- You can run anything in your system shell with a terminal,
		- including programs such as vim or emacs.
	
	- **Kernels**
		- When a notebook is closed, the kernel continues to run
			- this enables long-running actions and return later
		- we can shut down the kernel in Running panel
		
		- Kernels are separate process started by the server 
		that run the code in different programming languages and env
		
		- Any text files can be connected with a kernel and shift-enter run
		
		- Different Kernels may have different display API:
			- for IPython kernel we have display API that render
				object as HTML
			```
			from IPython.display import display, HTML
			display(HTML('<h1>Hello World</h1>'))
			```
			
			- For JShell in **Ganymede** Java kernel
				- we also have display API : https://github.com/allen-ball/ganymede/tree/trunk#java
		
		- ipykernel, xeus, lisp kernel supports debug in Jupyter
			- the others kernels depend on if they implement Debugger Protocol
			- if a kernel support debug, you'll see a bug icon around the kernel 
			- click the bug icon to enter debugging
		
				
3. During install of Ganymede 

3.1 We download a JAR of Ganymede Kernels

3.2 we need to install java in our environment to run jar
		- here the default option of Java is Java 8:
			- https://www.java.com/en/download/
			- reason of java 8 recommendation : https://www.java.com/download/why-java-8-recommended.html
			- we can download JAVA21 develop kit in https://www.oracle.com/java/technologies/downloads/#jdk21-windows
	
	- I installed both Java 8 and Java21 JDK in C disk
	- Java 8 is in C:\Program Files (x86)\Common Files\Oracle\Java\javapath\
	- JDK 21 is in C:\Program Files\Java\jdk-21\

3.3 in cmd, `java -version` i got (ref: https://daisy.github.io/pipeline/Get-Help/Troubleshooting/Common-Errors-Windows/)

`
C:\Users\59803>java -version
java version "1.8.0_381"
Java(TM) SE Runtime Environment (build 1.8.0_381-b09)
Java HotSpot(TM) Client VM (build 25.381-b09, mixed mode, sharing)
`

This is the original version where we installed java 8 for non-programmers, later we'll change to Java SDK 21


3.4 Set %JAVA_HOME%  (ref: https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-to-fix-common-JAVA_HOME-errors-quickly)

- `JAVA_HOME` must point to a JDK directory in our case
- `C:\Program Files\Java\jdk-21\`
- we can add it in system variable with name JAVA_HOME
- we can use `echo %JAVA_HOME% ` to test if this is successful ,if so, the path would show


3.5 set %PATH% (ref: https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-do-I-install-Java-on-Windows)

- add bin folder of JDK to the `PATH` in system variable
- we can use 'java -version' to see if java sdk is successfully installed
- now we can see the javasdk21 is successfully installed 

```
C:\Windows\System32>java -version
java version "21" 2023-09-19 LTS
Java(TM) SE Runtime Environment (build 21+35-LTS-2513)
Java HotSpot(TM) 64-Bit Server VM (build 21+35-LTS-2513, mixed mode, sharing)

```


3.6 `$ java -jar ganymede-2.1.2.20230910.jar -i` don't work:
ERROR: 
```
ERROR [    main] Install                                  : Cannot run program "which": CreateProcess error=2, The system cannot find the file specified
java.io.IOException: Cannot run program "which": CreateProcess error=2, The system cannot find the file specified
```

-  - we check the requirements of Ganymede



- [x] Java 11 or later is required. 

- [ ] In addition to Java, the [Jupyter Notebook](https://jupyter-notebook.readthedocs.io/en/stable/index.html) must be [installed](https://jupyter.readthedocs.io/en/latest/install/notebook-classic.html) first 
- [ ] and the jupyter and python commands must be on the ${PATH}.

----

- 3.6.1 let's check the jupyter notebook, 
	x- I am sure I installed jupyter lab
	- even though jupyter lab and jupyter notebook have same ipynb, they are different 


- Check the anaconda navigator:
	- in base environment and anaconda3 environment: E:\Users\59803\anaconda3
	x- we didn't install jupyterlab and the system path now I am sure is not added 

- Checking the path and the format of jupyter directory

	- C:\Users\59803\AppData\Local\Programs\Python\Python39\Scripts
	- the path of jupyter is already added in %PATH%
------
- [x] jupyter notebook, jupyter lab are all installed in environment 'base'
- [ ] is the path for this 'base' environment in `E:\Users\59803\anaconda3\Scripts`  added to `PATH` 
		(ref: https://blog.csdn.net/qq_34233136/article/details/105178675)
		- I also add it to PATH but I am not sure which one would be executed first
		- I also tried delete the old c disk path 
		- still can not run this jar file for ganymede
		
- I would like to download another jar file and test?
		- the test for other jar file is normal

------

- 3.6.2 according to copilot's suggestion about the error `which` command:

- it suggests that `which` command 
	- is typically included in Unix-based system, but may not in Windows
	- thus `which` command is not recognized in Windows
	- I should try in Unix-like environment such as Cygwin or Git Bash
		-that includes `which` command
----

3.6.3 **Try GitBash**

- Thus I tried `java -jar ganymede-2.1.2.20230910.jar -i` in gitbash

- We now have a new Error!! the `which` command error is solved
	- And I also noticed the `$` before `java -jar ganymede-2.1.2.20230910.jar -i`
	- and `$` is the typical Unix operator to access a command 
	- we would know it next time when we see a command start with `$`
----
3.6.4 New Error in gitbash of Jupyter:

```
59803@LAPTOP-7PA5B90O MINGW64 ~/Downloads
$ java -jar ganymede-2.1.2.20230910.jar -i
ERROR [    main] Install                                  : Cannot run program "/c/Users/59803/AppData/Local/Programs/Python/Python39/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
java.io.IOException: Cannot run program "/c/Users/59803/AppData/Local/Programs/Python/Python39/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
        at ganymede.install.Install.getOutputAsJson(Install.java:310)
        at ganymede.install.Install.run(Install.java:140)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.run(Launcher.java:92)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.main(Launcher.java:60)
Caused by: java.io.IOException: CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessImpl.create(Native Method)
        at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:500)
        at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:159)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
        ... 13 common frames omitted


```

- After we move the directory to where the install jar of ganymede
- and run the install command in gitbash
- we find out we didn't find jupyter in C disk
- can we activate the `base` environment in anaconda where we are sure everything is installed?

----

3.6.5 add conda to git bash

(ref 1: https://fmorenovr.medium.com/how-to-add-conda-to-git-bash-windows-21f5e5987f3d)
(ref 2: https://discuss.codecademy.com/t/setting-up-conda-in-git-bash/534473)

- we would like to activate conda env `base` here and then install 
- after git bash in the directory of `Anaconda/etc/profile.d/`
- and run `echo ". ${PWD}/conda.sh" >> ~/.bashrc` in gitbash
- reopen gitbash and we can activate conda environment in git bash now

----

3.6.6 In in the `base` environment

- we find the error changes:
```
(base)
59803@LAPTOP-7PA5B90O MINGW64 ~/Downloads
$ java -jar ganymede-2.1.2.20230910.jar -i
ERROR [    main] Install                                  : Cannot run program "/e/Users/59803/anaconda3/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
java.io.IOException: Cannot run program "/e/Users/59803/anaconda3/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
        at ganymede.install.Install.getOutputAsJson(Install.java:310)
        at ganymede.install.Install.run(Install.java:140)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.run(Launcher.java:92)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.main(Launcher.java:60)
Caused by: java.io.IOException: CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessImpl.create(Native Method)
        at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:500)
        at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:159)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
        ... 13 common frames omitted
(base)


```

- we are now in base environment, and we still can not run the jupyter in E disk

- we check the jupyter by `pip show jupyter`

and got: 

```
Name: jupyter
Version: 1.0.0
Summary: Jupyter metapackage. Install all the Jupyter components in one go.
Home-page: http://jupyter.org
Author: Jupyter Development Team
Author-email: jupyter@googlegroups.org
License: BSD
Location: e:\users\59803\anaconda3\lib\site-packages
Requires: ipykernel, ipywidgets, jupyter-console, nbconvert, notebook, qtconsole
Required-by:
(base)

```

- we check the python  `$ python --version`
and got :
```
Python 3.9.12
(base)
```

- we are sure there's jupyter in the e disk directory of Anaconda/Scripts/


3.6.7 now, we edit the environment variables in E disk

```

E:\Users\59803\anaconda3\Scripts

E:\Users\59803\anaconda3\Library\bin
```


- and only keep the C disk ones which from Python

- but after finding the jupyter in C disk and E disk both can not run jupyter, I add the path back and ask copilot

---


3.6.8 Error jupyter command not found

- [x] jupyter installed?
 - in e disk, conda base environment, `jupyter --version` we have:
 ```
$ jupyter --version
Selected Jupyter core packages...
IPython          : 8.2.0
ipykernel        : 6.24.0
ipywidgets       : 7.6.5
jupyter_client   : 6.1.12
jupyter_core     : 5.3.0
jupyter_server   : 1.23.4
jupyterlab       : 3.6.3
nbclient         : 0.5.13
nbconvert        : 6.4.4
nbformat         : 5.3.0
notebook         : 6.4.8
qtconsole        : 5.3.0
traitlets        : 5.7.1
(base)

 ```
 
 - in C disk , we have:
 ```
 jupyter --version
Selected Jupyter core packages...
IPython          : 8.4.0
ipykernel        : 6.24.0
ipywidgets       : not installed
jupyter_client   : 8.2.0
jupyter_core     : 5.3.0
jupyter_server   : 2.5.0
jupyterlab       : 4.0.2
nbclient         : 0.7.4
nbconvert        : 7.4.0
nbformat         : 5.8.0
notebook         : 6.5.4
qtconsole        : not installed
traitlets        : 5.9.0


 ```
 
 - we can see they have slightly version differences, but both env can not find `jupyter` while it's already installed
 
3.6.9 `Path` in environment variable:

- we find out, when do nothing, the trigger directory of `jupyter` depends on the order of C disk env and E disk env in `PATH`

- if C disk jupyter env is at the top of E disk jupyter env , then C is served as default, vice versa.


 - no matter which env, we just can not find it in respective different directory
 
 ```
 
 $ java -jar ganymede-2.1.2.20230910.jar -i
ERROR [    main] Install                                  : Cannot run program "/c/Users/59803/AppData/Local/Programs/Python/Python39/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
java.io.IOException: Cannot run program "/c/Users/59803/AppData/Local/Programs/Python/Python39/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
        at ganymede.install.Install.getOutputAsJson(Install.java:310)
        at ganymede.install.Install.run(Install.java:140)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.run(Launcher.java:92)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.main(Launcher.java:60)
Caused by: java.io.IOException: CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessImpl.create(Native Method)
        at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:500)
        at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:159)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
        ... 13 common frames omitted


59803@LAPTOP-7PA5B90O MINGW64 ~/Downloads
$ conda activate base
(base)
59803@LAPTOP-7PA5B90O MINGW64 ~/Downloads
$ java -jar ganymede-2.1.2.20230910.jar -i
ERROR [    main] Install                                  : Cannot run program "/e/Users/59803/anaconda3/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
java.io.IOException: Cannot run program "/e/Users/59803/anaconda3/Scripts/jupyter": CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
        at ganymede.install.Install.getOutputAsJson(Install.java:310)
        at ganymede.install.Install.run(Install.java:140)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.run(Launcher.java:92)
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:759)
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:749)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)
        at ganymede.Launcher.main(Launcher.java:60)
Caused by: java.io.IOException: CreateProcess error=2, The system cannot find the file specified
        at java.base/java.lang.ProcessImpl.create(Native Method)
        at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:500)
        at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:159)
        at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
        ... 13 common frames omitted
(base)

 ```
 
 3.6.10 It could be the problem of system environment variable: (ref: https://docs.appeon.com/2017/appeon_troubleshooting_guide/ch05s02s01.html)
---

3.6.11 But most likely, the problem is that they do not support Windows System after we use gitbash to solve the first problem
  - Issue of not working on windows: https://github.com/allen-ball/ganymede/issues/2
  - someone work around uses Linus on Windows WSL https://github.com/allen-ball/ganymede/issues/9#issuecomment-1630704458

-----

3.7 Ijava seems to be more solid and consice than Ganymede https://github.com/SpencerPark/IJava ? 

- Ijava also relies on JDK 9 + feature called Jshell, which allows executing Java code without compiling it first.
- but Ijava is too old and no update since 2019
- Ijava mentioned that it supported both jupyter and jupyterlab
- install of Ijava 
	- with a book example : https://subscription.packtpub.com/book/data/9781789137408/5
	- with anotehr example https://sidshome.wordpress.com/2022/10/30/running-java-in-a-jupyter-notebook/

----

3.7.1 Install Ijava: ref of the book: ( https://subscription.packtpub.com/book/data/9781789137408/5)

- Install from source (https://github.com/SpencerPark/IJava#install-from-source)

- [x] Install JAVA and test through `java --version`
- [x] Find jdk shell through`java --list-modules | findstr "jdk.jshell"`, shoudl output `jdk.jshell@` followed by your java version.
- [x] Install Jupyter environment
- [x] Clone IJAVA from (https://github.com/SpencerPark/IJava) to local (E:\IJava)




3.7.2 Error of Gradlew and JAVA version

- [ ] Try installation with `gradlew installKernel` in Windows system

```
E:\IJava>gradlew installKernel

FAILURE: Build failed with an exception.

* What went wrong:
Could not create service of type ScriptPluginFactory using BuildScopeServices.createScriptPluginFactory().
> Could not create service of type PluginResolutionStrategyInternal using BuildScopeServices.createPluginResolutionStrategy().

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 0s

```

- And while check the issue of IJAVA, that is caused by the gradlew in IJAVA is too old for new JAVA version:
	- https://github.com/SpencerPark/IJava/issues/129
	- Java 17 is supported only by gradle versions 7.3+. 

- One solution is to update gradle as in 
	- https://github.com/SpencerPark/IJava/pull/134
	- https://github.com/SpencerPark/Jupyter-kernel-installer-gradle/pull/14

- The solution of update branch is : https://github.com/saalfeldlab/IJava


---

3.7.3 **IJAVA branch that has JAVA 17 compatible gradle setup**

- ref : (https://github.com/saalfeldlab/IJava)

- we clone this branch in E:/IJava17/

- and in the directory, we run gradlew installKernel --prefix=/path/to/installation/prefix
- it download the gradlew of version 7.5.1, original we have 4.8.1 which is too old
- Gradle 7.5.1 support JAVA 18, now we are at JAVA 21


- we get error :

```

Welcome to Gradle 7.5.1!

Here are the highlights of this release:
 - Support for Java 18
 - Support for building with Groovy 4
 - Much more responsive continuous builds
 - Improved diagnostics for dependency resolution

For more details see https://docs.gradle.org/7.5.1/release-notes.html

Starting a Gradle Daemon (subsequent builds will be faster)

FAILURE: Build failed with an exception.

* What went wrong:
Could not open cp_settings generic class cache for settings file 'E:\IJava17\settings.gradle' (C:\Users\59803\.gradle\caches\7.5.1\scripts\9bimkwnf2r5z14vz759vkfnnb).
> BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 65

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.

* Get more help at https://help.gradle.org

```

3.7.4 Trying if java 17 works,

- we installed Java 17 in C:\Program Files\Java\jdk-17

ref: https://blog.csdn.net/wq6ylg08/article/details/91352199
- And we also need to change the environment variable of java from version 21 to current 17
- which is change `JAVA_HOME` : `C:\Program Files\Java\jdk-xx` xx is our current 17
- and change `PATH`:  `C:\Program Files\Java\jdk-xx\bin`

- and test `java -version`:
- now we have 
```
java version "17.0.8" 2023-07-18 LTS
Java(TM) SE Runtime Environment (build 17.0.8+9-LTS-211)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.8+9-LTS-211, mixed mode, sharing)
```
- remember you need to reopen `cmd` to see the change
----

3.7.5 with JAVA 17 and the fixed IJAVA, build successfully

```
E:\IJava17>gradlew installKernel --prefix=/path/to/installation/prefix
Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details

> Task :installer:compileKotlin
'compileJava' task (current target is 17) and 'compileKotlin' task (current target is 1.8) jvm target compatibility should be set to the same Java version.
w: Runtime JAR files in the classpath should have the same version. These files were found in the classpath:
    C:/Users/59803/.gradle/wrapper/dists/gradle-7.5.1-all/1ehga6e77gqps5uk2kc5kf1vc/gradle-7.5.1/lib/kotlin-stdlib-1.6.21.jar (version 1.6)
    C:/Users/59803/.gradle/wrapper/dists/gradle-7.5.1-all/1ehga6e77gqps5uk2kc5kf1vc/gradle-7.5.1/lib/kotlin-stdlib-common-1.6.21.jar (version 1.6)
    C:/Users/59803/.gradle/wrapper/dists/gradle-7.5.1-all/1ehga6e77gqps5uk2kc5kf1vc/gradle-7.5.1/lib/kotlin-stdlib-jdk7-1.6.21.jar (version 1.6)
    C:/Users/59803/.gradle/wrapper/dists/gradle-7.5.1-all/1ehga6e77gqps5uk2kc5kf1vc/gradle-7.5.1/lib/kotlin-stdlib-jdk8-1.6.21.jar (version 1.6)
    C:/Users/59803/.gradle/wrapper/dists/gradle-7.5.1-all/1ehga6e77gqps5uk2kc5kf1vc/gradle-7.5.1/lib/kotlin-reflect-1.6.21.jar (version 1.6)
    C:/Users/59803/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.5.31/ff5d99aecd328872494e8921b72bf6e3af97af3e/kotlin-stdlib-jdk8-1.5.31.jar (version 1.5)
    C:/Users/59803/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.5.31/77e0f2568912e45d26c31fd417a332458508acdf/kotlin-stdlib-jdk7-1.5.31.jar (version 1.5)
    C:/Users/59803/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.5.31/6628d61d0f5603568e72d2d5915d2c034b4f1c55/kotlin-stdlib-1.5.31.jar (version 1.5)
    C:/Users/59803/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.5.31/43331609c7de811fed085e0dfd150874b157c32/kotlin-stdlib-common-1.5.31.jar (version 1.5)
w: Some runtime JAR files in the classpath have an incompatible version. Consider removing them from the classpath
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\InstallKernelTask.kt: (45, 24): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\InstallKernelTask.kt: (64, 9): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\InstallKernelTask.kt: (69, 9): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelExtension.kt: (39, 24): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelExtension.kt: (78, 9): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelParameterSpecContainer.kt: (32, 24): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelParameterSpecContainer.kt: (42, 182): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelParameterSpecContainer.kt: (46, 182): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelParameterSpecContainer.kt: (50, 178): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\KernelParameterSpecContainer.kt: (54, 180): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\ZipKernelTask.kt: (43, 24): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\ZipKernelTask.kt: (184, 9): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\ZipKernelTask.kt: (198, 9): 'ConfigureUtil' is deprecated. Deprecated in Java
w: E:\IJava17\installer\src\main\kotlin\io\github\spencerpark\jupyter\gradle\ZipKernelTask.kt: (230, 9): 'ConfigureUtil' is deprecated. Deprecated in Java

> Task :compileJava
Note: E:\IJava17\src\main\java\io\github\spencerpark\ijava\magics\dependencies\Maven.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 58s
12 actionable tasks: 12 executed

```

- we can see we build it successfully


3.7.6 No kernel found
- however we can not find the kernel
- and by reading the first several lines, we suspect the java 8 we installed before is interrupting
- thus we uninstalled java 8 and build again, we didn't see the version differences warning this time
- but `jupyter kernelspec list` we still didn't find the kernel


----

3.7.7 we try the pre-built libnary installation:

ref:(https://github.com/SpencerPark/IJava#install-pre-built-binary)

- not sure if there's future version conflict
- however, by downloading ijava release
- unzip it to a temp folder
- in temp folder directory,(for me I also activate my conda base env) run `python install.py --sys-prefix`, 

- this time the kernel is installed:
```
(base) C:\Users\59803\Downloads\ijava-1.3.0>python install.py --sys-prefix
C:\Users\59803\Downloads\ijava-1.3.0\install.py:164: DeprecationWarning: replace is ignored. Installing a kernelspec always replaces an existing installation
  install_dest = KernelSpecManager().install_kernel_spec(
Installed java kernel into "E:\Users\59803\anaconda3\share\jupyter\kernels\java"

(base) C:\Users\59803\Downloads\ijava-1.3.0>jupyter kernelspec list
Available kernels:
  python3    C:\Users\59803\AppData\Roaming\Python\share\jupyter\kernels\python3
  java       E:\Users\59803\anaconda3\share\jupyter\kernels\java
```




-------------------------------------------
Main task today:

1. Install Ganymede in jupyterlab

2. Timetable of Stage 1 and Stage 2 






----------------------------------------------
My thoughts:







--------------------------------------------
Take away: