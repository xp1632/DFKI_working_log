Coding Rules Summary:

-Simple Rules
	-Module should be self-contained and less dependency
	-Decrease repetition of Code
	-Encapsulate the reusable utilities

-Naming Rules

	-Naming should consider scope
	-Naming should tell its function 
	-Naming should keep consistent form 
	-No 'Customized'
	
-Renaming Rules
	-After renaming a function name with 'Rename Symbol',
	remember to change it manually in its component folder's index.ts

-CSS Rules

	-When the content is not fixed-sized,we prefer to use display:flex 
		instead of hard code padding px
	-However, if the content is fixed-sized, when we have to use hard code or relative
	position, we can use it.
	
	-When should we set the css in .css file, when should we just keep it styled inline
		-for the styles that we want the user to modify in future
		we keep it in css file
		-for the styles that are finalized by us and wanna no change by others
		we keep it inline, so no one modifies the inside of blackbox except us
		

-Import Rules
	-Keep a clean import path by encapsulate function in its folder module,
	which is export it in parent folder's index.ts
	-Keep the third party import at the top and our functions at the bottom
	

-Div Hierarchy Rules
	-Review the hierarchy of <div> after finishing the code
	-Remove unused <div>
	-Make sure from top element to bottom element, all layers of elements 
	are correctly sized and located
		-which means the children element is nicely wrapped by parent element,
		with proper and necessary padding if needed
		
	
-Delete Rules
	-Delete the code that only 'could be useful' 'in future', 
	we need to keep current code clean
	-Delete the code that has redundant function with others, keep the code simple
	

-Module Rules
	-Higher Cohesion, lower coupling
		-Cohesion: the similiarity inside the module
		-Coupleing: the dependency needed from other modules
